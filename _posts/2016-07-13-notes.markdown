---
layout: post
title:  "项目笔记"
categories: jekyll update
tags:
---
## 这，就是一个错题笔记

### 一、页面布局
![](/img/notes/layout.jpg)

    body {
        height: 100%;
    }
    .top {
        width: 100%;
        height: 60px;
        position: absolute;//使元素脱离文本流，浮动
        z-index: 100;
    }
    .top .logo {
        display: inline-block;
        width: 280px;
        margin-left: 20px;
    }
    .top .top-nav {
        display: inline-block;
    }
    .top .user {
        float: right;
    }
    //.content {
        //width: 100%;
        //height: 100%;
        //position: relative;
    //}
    .left-wrapper {
        width: 300px;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        margin-top: 60px;
    }
    .left-wrapper .list {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        overflow-y: auto;
    }
    .right-wrapper {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 300px;
        right: 0;
        margin-top: 60px;
        overflow-y: auto;
        min-width: 600px;
    }

### 二、\<img\>元素下多余空白
在使用DIV+CSS布局时，遇到<img>元素下多余空白
![](/img/notes/img.jpg)

解决方法：

**1.将\<img\>转换为块级对象**

即，对\<img\>元素设置display: block;

**2.设置\<img\>的垂直对齐方式**

即，设置\<img\>的vertical-align属性值为：“top,text-top,bottom,text-bottom,middle,sub”都可以解决多余空白bug。

**3.设置父对象的字体大小为0**

即，对\<img\>的父级元素设置font-size: 0;

**4.设置\<img\>的浮动属性**

即，对\<img\>元素设置float:left;

注：对于\<img\>元素下多余空白的BUG，需要依据实际原因做相应处理，见招拆招。

### 三、页面滚动一定距离后，显示置顶按钮
    var $goTop = $('<a class="go-top icon-up" title=' + IOT.tr('回顶部') + '><span>' + IOT.tr('回顶部') + '</span></a>').on('click', function (e) {
                    e.preventDefault();
                    window.scrollTo(0, 0);
                }).appendTo($('body'));

    $(window).on('scroll', function (e) {
        var scrollY = window.scrollY || document.documentElement.scrollTop || document.body.scrollTop;
        if (scrollY > 100) {
            $goTop.fadeIn();
        } else {
            $goTop.fadeOut();
        }
    });

### 四、部分浏览器在中文输入法下回车输入英文不能触发keyup事件
![](/img/notes/keyup.png)

解决方法：
1、将keyup事件绑定到body上而不是input标签上面

    //DOM结构
    <input type="text" name="user_name" id="user_name"  value="" required placeholder="请输入电话号码或者邮箱地址">

    //js代码
    var  phonePattern = /^(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/,
        emailPattern = /^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/,
        nameLength = $('#user_name').val().length;
    $('body').keyup(function(){
        var thiz = $('#user_name'), newLength = thiz.val().length, inputVal = thiz.val();
        if(newLength !== nameLength){
            nameLength = newLength;
            //TODO
        }
    });

2、将实时验证绑定为oninput事件

    $('#user_name').on('input',function(){
        //TODO
        function fn(){}
    })

注：1）使用oninput事件必须考虑浏览器兼容问题
![](/img/notes/oninput.png)

2） 以下两种情况不会触发oninput事件

   a）当脚本中改变value时，不会触发；
   b）从浏览器的自动下拉提示中选取时，不会触发。

   解决oninput浏览器兼容问题

    var input = document.getElementById('user_name');
    //IE下使用IE专有方法onpropertychange
    var ie = !!window.ActiveXObject;
    if(ie){
       input.onpropertychange = fn;
    }else{
       input.addEventListener("input",fn,false);
    }
    //或者对支持oninput的浏览器用oninput，其他浏览器（IE6/7/8）使用onpropertychange：
    if('oninput' in input){
        input.addEventListener("input",fn,false);
    }else {
        input.onpropertychange = fn;
    }

### 五、监听浏览器页面放大或者缩小

    function detectZoom(){ 
        var ratio = 0,
            screen = window.screen,
            ua = navigator.userAgent.toLowerCase();
        if (window.devicePixelRatio !== undefined) {
          ratio = window.devicePixelRatio;
        }else if (~ua.indexOf('msie')) {  
            if (screen.deviceXDPI && screen.logicalXDPI) {
                ratio = screen.deviceXDPI / screen.logicalXDPI;
            }
        }else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {
            ratio = window.outerWidth / window.innerWidth;
        }
        if (ratio){
            ratio = Math.round(ratio * 100);
        }
        // return ratio;
        $('.j_zoom').remove();
        if(ratio > 100){
            $('body').prepend('<div style="border-radius: 0;" class="alert-box alert header-alert j_zoom">页面被放大了，请按<strong> Ctrl+0 </strong>还原！</div>');
        }else if(ratio < 100){
            $('body').prepend('<div style="border-radius: 0;" class="alert-box alert header-alert  j_zoom">页面被缩小了，请按<strong> Ctrl+0 </strong>还原！</div>');
        }
    }
    detectZoom();
    window.onresize = function(){
        detectZoom();
    }

### 六、没有定宽的块级元素水平居中
1、加入\<table\>标签,利用table标签的长度自适应性---即不定义其长度也不默认父元素body的长度（table其长度根据其内文本长度决定），因此可以看做一个定宽度块元素，然后再利用定宽度块状居中的margin的方法，使其水平居中。

第一步：为需要设置的居中的元素外面加入一个 table 标签 ( 包括 \<tbody\>、\<tr\>、\<td\> )。

第二步：为这个 table 设置“左右 margin 居中”（这个和定宽块状元素的方法一样）。

2、改变块级元素的 display 为 inline 类型（设置为 行内元素 显示），然后使用 text-align:center 来实现居中效果

3、给父元素设置 float，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left: -50% 来实现水平居中。

### 七、null和undefined的区别

* undefined表示一个变量没有被声明，或者被声明了但没有被赋值（未初始化），一个没有传入实参的形参变量的值为undefined,如果一个函数什么都不返回,则该函数默认返回undefined；
* null是一个表示“没有值”的值；
* Javascript将未赋值的变量默认值设为undefined；
* Javascript从来不会将变量设为null。它是用来让程序员表明某个用var声明的变量时没有值的；
* undefined不是一个有效的JSON，而null是；
* undefined的类型(typeof)是undefined；
* null的类型(typeof)是object. ；
* 它们都是基本类型；
* 他们都是falsy (Boolean(undefined) ->// false, Boolean(null) ->// false)；
* 你可以这样判断一个变量是否是undefined。typeof variable === "undefined"；
* 你可以这样判断一个变量是否是null。variable === null；
* 双等号比较时它们相等（null==undefined ->// true），但三等号比较时不相等（null===undefined ->// false）；

### 八、获取地址栏参数

    function getUrlParam(name){
        var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i'),
            r = window.location.search.substr(1).match(reg);
        if (r != null) {
            return (r[2]);
        }else{
            return null;
        }
    }
    